# Generated by Django migration for ensuring users have notification channels

from django.db import migrations
from django.contrib.contenttypes.models import ContentType


def create_notification_channels_for_users(apps, schema_editor):
    """
    Ensures every user has a notification channel.
    Creates NotificationChannel instances for users that don't have one.
    """
    User = apps.get_model('user', 'User')
    NotificationChannel = apps.get_model('notification', 'NotificationChannel')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    
    # Get the ContentType for User model
    try:
        user_content_type = ContentType.objects.get(app_label='user', model='user')
    except ContentType.DoesNotExist:
        return

    
    # Find all users
    all_users = User.objects.all()
    
    # Get all existing notification channels for users
    existing_channels = NotificationChannel.objects.filter(
        content_type=user_content_type
    ).values_list('object_id', flat=True)
    
    # Find users without notification channels
    users_without_channels = all_users.exclude(id__in=existing_channels)
    
    # Create notification channels for users that don't have them
    channels_to_create = []
    for user in users_without_channels:
        channels_to_create.append(
            NotificationChannel(
                content_type=user_content_type,
                object_id=user.id,
                parent_id=None
            )
        )

    # Bulk create all channels
    if channels_to_create:
        NotificationChannel.objects.bulk_create(channels_to_create)


class Migration(migrations.Migration):

    dependencies = [
        ('user', '0017_report_group_id_report_post_id_report_post_type'),
        ('notification', '0008_fix_imagefield_in_notification_data'),
    ]

    operations = [
        migrations.RunPython(create_notification_channels_for_users),
    ]