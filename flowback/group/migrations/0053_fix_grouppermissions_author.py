# Generated by Django data migration
# Date: 2025-08-29 14:28

from django.db import migrations


def fix_grouppermissions_author(apps, schema_editor):
    """
    Check all GroupPermissions objects without an author.
    If there is a group with a default_permission set to the GroupPermissions object,
    set the author field to the group. Otherwise, delete the GroupPermissions object.
    """
    GroupPermissions = apps.get_model('group', 'GroupPermissions')
    Group = apps.get_model('group', 'Group')
    
    # Find all GroupPermissions objects without an author
    permissions_without_author = GroupPermissions.objects.filter(author__isnull=True)
    
    for permission in permissions_without_author:
        try:
            # Check if there's a group with default_permission set to this GroupPermissions object
            group = Group.objects.get(default_permission=permission)
            # Set the author field to the group
            permission.author = group
            permission.save()
        except Group.DoesNotExist:
            # No group has this as default_permission, so delete the GroupPermissions object
            permission.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('group', '0052_alter_groupuser_permission'),
    ]

    operations = [
        migrations.RunPython(
            fix_grouppermissions_author
        ),
    ]